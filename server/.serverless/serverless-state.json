{
  "service": {
    "service": "mypubcrawl",
    "serviceObject": {
      "name": "mypubcrawl"
    },
    "provider": {
      "stage": "dev",
      "region": "ap-southeast-2",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._,\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs6.10",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem"
          ],
          "Resource": "arn:aws:dynamodb:ap-southeast-2:074584043282:*"
        },
        {
          "Effect": "Allow",
          "Action": [
            "ses:SendEmail",
            "ses:SendRawEmail"
          ],
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "PubsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mypubcrawl-dev-pubs"
            }
          },
          "PubcrawlsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mypubcrawl-dev-pubcrawls"
            }
          },
          "SendemailLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/mypubcrawl-dev-sendemail"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "mypubcrawl",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mypubcrawl-dev-pubs:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mypubcrawl-dev-pubcrawls:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mypubcrawl-dev-sendemail:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mypubcrawl-dev-pubs:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mypubcrawl-dev-pubcrawls:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/mypubcrawl-dev-sendemail:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:DescribeTable",
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem"
                        ],
                        "Resource": "arn:aws:dynamodb:ap-southeast-2:074584043282:*"
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ses:SendEmail",
                          "ses:SendRawEmail"
                        ],
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "mypubcrawl",
                    "dev",
                    "ap-southeast-2",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PubsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mypubcrawl/dev/1501393896805-2017-07-30T05:51:36.805Z/mypubcrawl.zip"
              },
              "FunctionName": "mypubcrawl-dev-pubs",
              "Handler": "handler.pubs",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6
            },
            "DependsOn": [
              "PubsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PubsLambdaVersionmHAkXdYBDVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PubsLambdaFunction"
              },
              "CodeSha256": "mHAkXdYB/DVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA="
            }
          },
          "PubcrawlsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mypubcrawl/dev/1501393896805-2017-07-30T05:51:36.805Z/mypubcrawl.zip"
              },
              "FunctionName": "mypubcrawl-dev-pubcrawls",
              "Handler": "handler.pubcrawls",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6
            },
            "DependsOn": [
              "PubcrawlsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "PubcrawlsLambdaVersionmHAkXdYBDVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PubcrawlsLambdaFunction"
              },
              "CodeSha256": "mHAkXdYB/DVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA="
            }
          },
          "SendemailLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/mypubcrawl/dev/1501393896805-2017-07-30T05:51:36.805Z/mypubcrawl.zip"
              },
              "FunctionName": "mypubcrawl-dev-sendemail",
              "Handler": "handler.sendemail",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs6.10",
              "Timeout": 6
            },
            "DependsOn": [
              "SendemailLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SendemailLambdaVersionmHAkXdYBDVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SendemailLambdaFunction"
              },
              "CodeSha256": "mHAkXdYB/DVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-mypubcrawl"
            }
          },
          "ApiGatewayResourcePubs": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "pubs",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePubcrawls": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "pubcrawls",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceSendemail": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "sendemail",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPubsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePubs"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PubsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodPubcrawlsAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePubcrawls"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PubcrawlsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodSendemailAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceSendemail"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SendemailLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1501393896823": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPubsGet",
              "ApiGatewayMethodPubcrawlsAny",
              "ApiGatewayMethodSendemailAny"
            ]
          },
          "PubsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PubsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PubcrawlsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PubcrawlsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SendemailLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SendemailLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "PubsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PubsLambdaVersionmHAkXdYBDVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA"
            }
          },
          "PubcrawlsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PubcrawlsLambdaVersionmHAkXdYBDVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA"
            }
          },
          "SendemailLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SendemailLambdaVersionmHAkXdYBDVIsot9gNjy2yVEk9kCIhcNAGKwzxLMIIA"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.ap-southeast-2.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "functions": {
      "pubs": {
        "handler": "handler.pubs",
        "events": [
          {
            "http": {
              "path": "pubs",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "mypubcrawl-dev-pubs",
        "package": {},
        "vpc": {}
      },
      "pubcrawls": {
        "handler": "handler.pubcrawls",
        "events": [
          {
            "http": {
              "path": "pubcrawls",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "mypubcrawl-dev-pubcrawls",
        "package": {},
        "vpc": {}
      },
      "sendemail": {
        "handler": "handler.sendemail",
        "events": [
          {
            "http": {
              "path": "sendemail",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "mypubcrawl-dev-sendemail",
        "package": {},
        "vpc": {}
      }
    },
    "artifact": "/Users/shaun/WebstormProjects/solid-pancake/server/.serverless/mypubcrawl.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/mypubcrawl/dev/1501393896805-2017-07-30T05:51:36.805Z",
    "artifact": "mypubcrawl.zip"
  }
}